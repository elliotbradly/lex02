import Arc from "../../00.core/form/arc.form";
import State from "../../00.core/state";
import PathProcess from "../../00.core/title/prc/path.process";
import { Inject } from "typescript-ioc";

import * as Act from "../{{=it.nom}}.action";
import {{=it.bitTitle}} from "../fce/{{=it.nom}}.bit";


export default class Index{{=it.title}}Arc extends Arc {
  @Inject private path: PathProcess;

  constructor(private state: State) {
    super(state);
  }

  read = dat => {
    //console.log("do something good");
  };

  list = dat => {};

  create = (dat:{{=it.bitTitle}} ) => this.path.move(this.state, Act.{{=it.wakeActionKey}}, dat);

  update = dat => {};

  delete = dat => {};
}
